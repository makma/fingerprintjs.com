# TODO [VL] Look into composite actions to make the setup steps reusable.

name: CI
on: [push]
jobs:
  checks:
    name: 'CI checks: lint, prettier, test, build'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache gatsby .cache folder
        uses: actions/cache@v2
        id: gatsby-cache-folder
        with:
          path: .cache
          key: ${{ runner.os }}-cache-gatsby
          restore-keys: |
            ${{ runner.os }}-cache-gatsby

      - name: Cache gatsby public folder
        uses: actions/cache@v2
        id: gatsby-public-folder
        with:
          path: public/
          key: ${{ runner.os }}-public-gatsby
          restore-keys: |
            ${{ runner.os }}-public-gatsby

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: get yarn internal path
        id: user-yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache yarn internals
        id: cache-yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.user-yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        run: yarn install --prefer-offline --frozen-lockfile

      - name: yarn build
        run: yarn run build
        env:
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true

      - name: run eslint
        run: yarn run lint:ci

      - name: run prettier
        run: yarn run prettier

      - name: run test
        run: yarn run test:ci

      - name: zip build result
        run: tar -czvf build.tar.gz public
      - name: zip gatsby cache folder
        run: tar -czvf cache.tar.gz .cache

      - name: upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build.tar.gz
      - name: upload gatsby cache
        uses: actions/upload-artifact@v2
        with:
          name: cache
          path: cache.tar.gz

  lighthouse:
    name: Lighthouse
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: checks
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: get yarn internal path
        id: user-yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache yarn internals
        id: cache-yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.user-yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        run: yarn install --prefer-offline --frozen-lockfile

      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: extract build
        run: tar -xzvf build.tar.gz

      - name: run Lighthouse CI
        run: |
          yarn global add @lhci/cli@0.6.x
          export PATH=$(yarn global bin):$PATH
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  bundlewatch:
    name: Bundlewatch
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: checks
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: get yarn internal path
        id: user-yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache yarn internals
        id: cache-yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.user-yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        run: yarn install --prefer-offline --frozen-lockfile

      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: extract build
        run: tar -xzvf build.tar.gz

      - name: run bundlewatch
        run: yarn run bundlewatch
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
